@import "../../global.scss";

.topbar {
    width: 100%;
    height: 60px;
    background-color: white;
    color: $mainColor;
    position: fixed;
    top: 0;
    z-index: 3; /*so we still keep seeing the topbar even after we scroll down*/
    transition: all 1s ease;

    .wrapper {
        padding: 10px 30px; /*top and bottom | left and right*/
        display: flex;
        align-items: center;
        justify-content: space-between;

        .left {
            display: flex;
            align-items: center;
            .logo {
                width: 6.6875rem;
                // margin-left: 40px;
              }
              .itemContainer {
                display: flex;
                align-items: center;
                margin-left: 30px;
                @include mobile {
                    display: none;
                }
                .iconn {
                    font-size: 18px;
                    margin-right: 5px;
                }
                span {
                    font-size: 15px;
                    font-weight: 400;
                }
            }
        }

        .right {
            .hamburger {
                width: 32px;
                height: 25px;
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                cursor: pointer;

                span{
                    width: 100%;
                    /*100%ofitsparentie.32px*/height: 3px;
                    background-color: $mainColor;
                    transform-origin: left;
                    transition: all 2s ease;
                    }
        }
    }
}

&.active{  /*and if it has an active class.. to make it dynamic, we'll go n create a state in App.jsx*/
    background-color: $mainColor;
    color: gray;
    .hamburger{
        span{
            &:first-child{
                background-color: rgb(218, 214, 214);
                transform: rotate(45deg);
            }
            &:nth-child(2){
                opacity: 0; /*transition: all 2s ease; means all transitions be it opacity or transform rotate will happen after 2secs with ease*/
            }
            &:last-child {
                background-color: rgb(218, 214, 214);
                transform: rotate(-45deg);
            }
        }
}
}
}